server:
  port: 8011

eureka:
  client:
    serviceUrl:
      defaultZone: http://47.94.159.51:8761/eureka/
  instance:
    prefer-ip-address: true

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://47.94.159.51:3306/framework?useSSL=false&&characterEncoding=utf-8
    username: root
    password: 1qaz@wsx?Z
    hikari:
      # 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒以上
      maxLifetime: 1765000
      # 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
      maximumPoolSize: 15
      # 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
      idle-timeout: 600000
      # 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
      connection-timeout: 60000
      # 设定连接校验的超时时间
      validation-timeout: 5000
      # 指定连接数据库的超时时间
      login-timeout: 5
  http:
    encoding:
      charset: UTF-8
      enabled: true

  redis:
    host: 47.94.159.51
    port: 6379
    password: 1qaz@wsx?Z
    database: 2
    queue.timeout: 30
    pool.test-on-borrow: true
    pool.test-while-idle: true
#  cloud:
#    # sping cloud gateway 网关配置
#    gateway:
#      routes:
#        - uri: lb://framework-auth/
#          predicates:
#            - Path=/auth/**
#          filters:
#            - StripPrefix=1
#
#        - uri: lb://framework-resource/
#          predicates:
#            - Path=/resource/**
#          filters:
#            - StripPrefix=1
#
#        - uri: lb://framework-resource2/
#          predicates:
#            - Path=/resource2/**
#          filters:
#            - StripPrefix=1
#
#
#      httpclient:
#        # 链接超时时间
#        connect-timeout: 3000
#        # 响应超时时间 ，权衡各service之间调用时 hystrix的熔断时间。如果此时间小于hystrix的熔断时间。则报网关超时。
#        # 大于hystrix的超时时间时，熔断，返回fallback的数据。
#        response-timeout: 10000

mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  typeAliasesPackage: sy.demo.framework.common.dto,sy.demo.framework.gateway.entity
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 1
    #驼峰下划线转换
    db-column-underline: true
    #刷新mapper 调试神器
    refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true


# 开启clientFallback降级
feign:
  hystrix:
    enabled: true

# hystrix的熔断超时设置，大于ribbon的超时设置，让ribbon能够重试
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 4000

#请求处理的超时时间
ribbon.ReadTimeout: 10000
#请求连接的超时时间
ribbon.ConnectTimeout: 2000


zuul:
  host:
    connect-timeout-millis: 2000  # 据说采用服务发现的时候 超时采用ribbon的。这里的没用
    socket-timeout-millis: 2000


security:
  oauth2:
    client:
      clientId: client_gateway
      clientSecret: client_gateway
    resource:
      token-info-uri: http://localhost:8010/oauth/check_token